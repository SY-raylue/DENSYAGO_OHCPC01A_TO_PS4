#pragma METAINFO("DenShaDeGo PS4", 1, 3, "<for SANYING OHC-PC01x by EternityLam>")
#include "DenShaDeGo_PS4_V1.03-CORE.gph"

combo handleStick {
	/*****************************
	  Process Notch Convert
	******************************/
	bool btn2 = is_active(BUTTON_2);
	bool btn3 = is_active(BUTTON_3);
	bool btn5 = is_active(BUTTON_5);
	bool btn8 = is_active(BUTTON_8);
    if (!btn8 && !btn5 && !btn2 && btn3) {
		// EB 0001
        if (!isPressingUp) {
            set_val(BUTTON_3, 0.0);
        }

		lastL2 = 100.0;
        lastBreakPointLY = -100.0;
		lastAccPointLX = 0.0;
        lastBreakPointRX = 100.0;
    } else if (!btn8 && !btn5 && btn2 && !btn3) {
		// B8 0010
        set_val(BUTTON_2, 0.0);
		
		lastL2 = 0.0;
        lastBreakPointLY = -100.0;
		lastAccPointLX = 0.0;
        lastBreakPointRX = 100.0;
    } else if (!btn8 && !btn5 && btn2 && btn3) {
		//B7 0011
        set_val(BUTTON_2, 0.0);
        if (!isPressingUp) {
            set_val(BUTTON_3, 0.0);
        }
		
		lastL2 = 0.0;
        lastBreakPointLY = -90.0;
		lastAccPointLX = 0.0;
        lastBreakPointRX = 90.0;
    } else if (!btn8 && btn5 && !btn2 && !btn3) {
		//B6 0100
        set_val(BUTTON_5, 0.0);
		
		lastL2 = 0.0;
        lastBreakPointLY = -80.0;
		lastAccPointLX = 0.0;
        lastBreakPointRX = 80.0;
		
    } else if (!btn8 && btn5 &&  !btn2 && btn3) {
		//B5 0101
        if (!isPressingUp) {
            set_val(BUTTON_3, 0.0);
        }
        set_val(BUTTON_5, 0.0);
		
		lastL2 = 0.0;
        lastBreakPointLY = -70.0;
		lastAccPointLX = 0.0;
        lastBreakPointRX = 75.0;
		
    } else if (!btn8 && btn5  && btn2 && !btn3 ) {
		//B4 0110
        set_val(BUTTON_2, 0.0);
        set_val(BUTTON_5, 0.0);
		
		lastL2 = 0.0;
        lastBreakPointLY = -60.0;
		lastAccPointLX = 0.0;
        lastBreakPointRX = 60.0;
    } else if (!btn8 && btn5 && btn2 && btn3) {
		//B3 0111
        set_val(BUTTON_2, 0.0);
        if (!isPressingUp) {
            set_val(BUTTON_3, 0.0);
        }
        set_val(BUTTON_5, 0.0);
		
		lastL2 = 0.0;
        lastBreakPointLY = -50.0;
		lastAccPointLX = 0.0;
        lastBreakPointRX = 50.0;
    } else if (btn8 &&  !btn5 && !btn2 && !btn3) {
		//B2 1000

        set_val(PS4_L2, 0.0);
		
        lastBreakPointLY = -40.0;
		lastAccPointLX = 0.0;
        lastBreakPointRX = 40.0;
    } else if (btn8 && !btn5 && !btn2 && btn3) {
		//B1 1001

        if (!isPressingUp) {
            set_val(BUTTON_3, 0.0);
        }
		
		lastL2 = 0.0;
        lastBreakPointLY = -30.0;
		lastAccPointLX = 0.0;
        lastBreakPointRX = 30.0;
    } else if (btn8 && !btn5 && btn2 && !btn3) {
		//N 1010

        set_val(BUTTON_2, 0.0);

		lastL2 = 0.0;		
        lastBreakPointLY = 0.0;
		lastAccPointLX = 0.0;
        lastBreakPointRX = 0.0;
    } else if (btn8 && !btn5 && btn2 && btn3) {
		//P1 1011
        set_val(BUTTON_2, 0.0);
        if (!isPressingUp) {
            set_val(BUTTON_3, 0.0);
        }
		
		lastL2 = 0.0;
        lastBreakPointLY = 30.0;
		lastAccPointLX = -30.0;
        lastBreakPointRX = 0.0;
    } else if (btn8 &&  btn5 && !btn2 && !btn3) {
		//P2 1100
        set_val(BUTTON_5, 0.0);
		
		lastL2 = 0.0;
        lastBreakPointLY = 50.0;
		lastAccPointLX = -50.0;
        lastBreakPointRX = 0.0;
    } else if (btn8 && btn5 &&!btn2 && btn3) {
		//P3 1101

        set_val(PS4_L2, 0.0);
        set_val(BUTTON_5, 0.0);
        if (!isPressingUp) {
            set_val(BUTTON_3, 0.0);
        }
        lastBreakPointLY = 70.0;
		lastAccPointLX = -70.0;
        lastBreakPointRX = 0.0;
    } else if (btn8 &&  btn5 && btn2 && !btn3) {
		//P4 1110

        set_val(BUTTON_5, 0.0);
        set_val(BUTTON_2, 0.0);
		
		lastL2 = 0.0;
        lastBreakPointLY = 80.0;
		lastAccPointLX = -80.0;
        lastBreakPointRX = 0.0;
    } else if (btn8 && btn5 && btn2 && btn3) {
		//P5 1111

        set_val(BUTTON_2, 0.0);
        if (!isPressingUp) {
            set_val(BUTTON_3, 0.0);
        }
        set_val(BUTTON_5, 0.0);

		lastL2 = 0.0;		
        lastBreakPointLY = 100.0;
		lastAccPointLX = -100.0;
        lastBreakPointRX = 0.0;
    }
	
	set_val(PS4_L2, lastL2);
	set_val(PS4_LY, lastBreakPointLY);
    set_val(PS4_LX, lastAccPointLX);
    set_val(PS4_RX, lastBreakPointRX);
}

main {
    combo_run(handleBlack);
    combo_run(handleUpDown);
    combo_run(handleYellow);
    combo_run(handleWhite);
    combo_run(handleStick);
}